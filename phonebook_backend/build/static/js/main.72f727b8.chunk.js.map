{"version":3,"sources":["services/persons.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Filter.js","components/Notification.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Person","person","handleDelete","name","number","onClick","Persons","persons","map","i","key","Filter","filter","Notification","message","className","Error","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","confirmationMessage","setConfirmationMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","console","log","personsToShow","input","Array","prototype","every","call","unicodeChar","toLowerCase","includes","event","target","preventDefault","alert","window","confirm","changedPerson","setTimeout","catch","error","length","returnedPerson","concat","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72f727b8.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, deletePerson, update };\r\n","import React from 'react';\r\n\r\nconst PersonForm = props => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number:{' '}\r\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Person = ({ person, handleDelete }) => {\r\n  return (\r\n    <li>\r\n      {person.name} {person.number}\r\n      <button onClick={handleDelete}>delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst Persons = ({ persons, handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      {persons.map((person, i) => (\r\n        <Person\r\n          key={i}\r\n          person={person}\r\n          // questionable use of _id here\r\n          handleDelete={() => handleDelete(person.id, person.name)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ filter }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input onChange={filter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"notification\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst Error = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\n\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport Error from './components/Error';\n\nimport './index.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [confirmationMessage, setConfirmationMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n      console.log(initialPersons);\n    });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    for (let i = 0; i < persons.length; i++) {\n      if (newName === '' || newNumber === '') {\n        return alert('Must specify a name and a number');\n      } else if (newName === persons[i].name) {\n        const check = window.confirm(\n          `${persons[i].name} is already added to the phonebook, replace the old number with a new one?`\n        );\n        if (check === true) {\n          const changedPerson = { ...persons[i], number: newNumber };\n          personService\n            .update(persons[i].id, changedPerson)\n            .then(() => {\n              setConfirmationMessage(`updated ${persons[i].name}'s number`);\n              setTimeout(() => {\n                setConfirmationMessage(null);\n              }, 5000);\n            })\n            .catch((error) => {\n              setErrorMessage(\n                `${persons[i].name} was already removed from the server`\n              );\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 5000);\n            });\n          personService.getAll().then((initialPersons) => {\n            setPersons(initialPersons);\n          });\n        }\n        return;\n      }\n    }\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    personService\n      .create(personObject)\n      .then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setConfirmationMessage(`Added ${newName}`);\n        setTimeout(() => {\n          setConfirmationMessage(null);\n        }, 5000);\n        setNewName('');\n        setNewNumber('');\n      })\n      .catch((error) => {\n        //console.log(error.response.data);\n        setErrorMessage(error.response.data.error);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  const handleDelete = (id, name) => {\n    const check = window.confirm(`Do you want to delete ${name}?`);\n    if (check === true) {\n      personService.deletePerson(id);\n      // Segment below with setTimeout may be abit wonky? For the moment i cant figure out how to get it to work properly without this, (the issue is that when i delete some1 from the phonebook it doesnt rerender, and if it does it still prints a empty bulletpoint)\n      setTimeout(() => {\n        personService.getAll().then((initialPersons) => {\n          setPersons(initialPersons);\n        });\n      }, 10);\n      // end of segment\n      setConfirmationMessage(`Successfully removed ${name}`);\n      setTimeout(() => {\n        setConfirmationMessage(null);\n      }, 5000);\n    }\n  };\n\n  /* Got help with this one below from the internet, however changed it to match this code. But it still doesnt matter how many letters there are, e.g the input \"eeeee\" still matches \"Arto Hellas\" */\n  /* The function returns a boolean (true/false) depending if the string/name contains the letters specified in the input */\n  const nameFilter = (input, name) => {\n    return Array.prototype.every.call(input, (unicodeChar) =>\n      name.toLowerCase().includes(unicodeChar.toLowerCase())\n    );\n  };\n\n  const personsToShow = persons.filter(\n    (person) => nameFilter(newFilter, person.name) === true\n  );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={confirmationMessage} />\n      <Error message={errorMessage} />\n      <Filter filter={handleFilterChange} />\n      <h2>Add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}